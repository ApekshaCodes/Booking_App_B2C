{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI in .env.local');\n}\n\nlet cached = (global as any).mongoose;\n\nif (!cached) {\n  cached = (global as any).mongoose = { conn: null, promise: null };\n}\n\nexport default async function connectToDatabase() {\n  console.log('üîå Connecting to MongoDB...');\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    console.log('üåê No cached connection found, creating a new one...');\n    cached.promise = mongoose.connect(MONGODB_URI, {\n      dbName: 'bookingApp', \n      bufferCommands: false,\n    });\n\n    console.log('üîó Mongoose connection promise created');\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,AAAC,OAAe,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,AAAC,OAAe,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEe,eAAe;IAC5B,QAAQ,GAAG,CAAC;IACZ,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,QAAQ,GAAG,CAAC;QACZ,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,QAAQ;YACR,gBAAgB;QAClB;QAEA,QAAQ,GAAG,CAAC;IACd;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/models/order.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst orderSchema = new mongoose.Schema({\n  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n  destination: String,\n  last_travel_date: Date,\n  details: String, // e.g., ‚Äúflight + hotel‚Äù\n});\n\nexport default mongoose.models.Order || mongoose.model('Order', orderSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACtC,QAAQ;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,KAAK;QAAQ,UAAU;IAAK;IAC5E,aAAa;IACb,kBAAkB;IAClB,SAAS;AACX;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/lib/auth.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst JWT_SECRET = process.env.JWT_SECRET!;\n\nexport function generateToken(payload: object) {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: '15m' });\n}\n\nexport function generateRefreshToken(payload: object) {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: '7d' });\n}\n\nexport function verifyToken(token: string) {\n  return jwt.verify(token, JWT_SECRET);\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAElC,SAAS,cAAc,OAAe;IAC3C,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAM;AAC1D;AAEO,SAAS,qBAAqB,OAAe;IAClD,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAK;AACzD;AAEO,SAAS,YAAY,KAAa;IACvC,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;AAC3B","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/app/api/bookings/%5Bid%5D/summary/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport connectToDatabase from '../../../../../lib/db';\nimport Order from '../../../../../models/order';\nimport { verifyToken } from '../../../../../lib/auth';\n\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY!;\n\nexport const POST = async (req: NextRequest, context: { params: { id: string } }) => {\n  try {\n    const token = req.headers.get('authorization')?.split(' ')[1];\n    if (!token) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const decoded: any = verifyToken(token);\n    const userId = decoded.userId;\n\n    await connectToDatabase();\n\n    const { id } = await Promise.resolve(context.params);\n\n    console.log('Generating booking summary for ID:', id);\n\n    const booking = await Order.findOne({ _id: id, userId });\n\n    console.log('Booking found:', booking);\n\n    if (!booking) {\n      return NextResponse.json({ error: 'Booking not found' }, { status: 404 });\n    }\n\n    const prompt = `\n      Generate a friendly booking summary for the following:\n      Destination: ${booking.destination}\n      Last Travel Date: ${booking.last_travel_date.toDateString()}\n      Details: ${booking.details}\n\n      Format it like:\n      \"You're traveling to <destination> on <date>. Your booking includes <details>.\"\n    `;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-3.5-turbo',\n        messages: [{ role: 'user', content: prompt }],\n        temperature: 0.7,\n      }),\n    });\n\n    console.log('OpenAI response status:', response.status);\n    const result = await response.json();\n    if (response.status === 429) {\n  const fallback = `You're traveling to ${booking.destination} on ${booking.last_travel_date.toDateString()}. Your booking includes ${booking.details}.`;\n  return NextResponse.json({ summary: fallback });\n}\n    const summary = result.choices?.[0]?.message?.content;\n\n    return NextResponse.json({ summary });\n  } catch (error) {\n    console.error('‚ùå Booking summary generation failed:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc;AAE1C,MAAM,OAAO,OAAO,KAAkB;IAC3C,IAAI;QACF,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,MAAM,IAAI,CAAC,EAAE;QAC7D,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,UAAe,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD,EAAE;QACjC,MAAM,SAAS,QAAQ,MAAM;QAE7B,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAiB,AAAD;QAEtB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,OAAO,CAAC,QAAQ,MAAM;QAEnD,QAAQ,GAAG,CAAC,sCAAsC;QAElD,MAAM,UAAU,MAAM,wHAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAAE,KAAK;YAAI;QAAO;QAEtD,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,SAAS,CAAC;;mBAED,EAAE,QAAQ,WAAW,CAAC;wBACjB,EAAE,QAAQ,gBAAgB,CAAC,YAAY,GAAG;eACnD,EAAE,QAAQ,OAAO,CAAC;;;;IAI7B,CAAC;QAED,MAAM,WAAW,MAAM,MAAM,8CAA8C;YACzE,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,gBAAgB;gBAC3C,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;gBACP,UAAU;oBAAC;wBAAE,MAAM;wBAAQ,SAAS;oBAAO;iBAAE;gBAC7C,aAAa;YACf;QACF;QAEA,QAAQ,GAAG,CAAC,2BAA2B,SAAS,MAAM;QACtD,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,IAAI,SAAS,MAAM,KAAK,KAAK;YAC/B,MAAM,WAAW,CAAC,oBAAoB,EAAE,QAAQ,WAAW,CAAC,IAAI,EAAE,QAAQ,gBAAgB,CAAC,YAAY,GAAG,wBAAwB,EAAE,QAAQ,OAAO,CAAC,CAAC,CAAC;YACtJ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAS;QAC/C;QACI,MAAM,UAAU,OAAO,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS;QAE9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAQ;IACrC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}