{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI in .env.local');\n}\n\nlet cached = (global as any).mongoose;\n\nif (!cached) {\n  cached = (global as any).mongoose = { conn: null, promise: null };\n}\n\nexport default async function connectToDatabase() {\n  console.log('üîå Connecting to MongoDB...');\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    console.log('üåê No cached connection found, creating a new one...');\n    cached.promise = mongoose.connect(MONGODB_URI, {\n      dbName: 'bookingApp', \n      bufferCommands: false,\n    });\n\n    console.log('üîó Mongoose connection promise created');\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,AAAC,OAAe,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,AAAC,OAAe,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEe,eAAe;IAC5B,QAAQ,GAAG,CAAC;IACZ,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,QAAQ,GAAG,CAAC;QACZ,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,QAAQ;YACR,gBAAgB;QAClB;QAEA,QAAQ,GAAG,CAAC;IACd;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/models/user.ts"],"sourcesContent":["import mongoose, { Schema, model, models, Document } from 'mongoose';\n\ninterface IUser extends Document {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst userSchema = new Schema<IUser>(\n  {\n    name: { type: String, required: true },\n    email: { type: String, required: true, unique: true },\n    password: { type: String, required: true },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst User = models.User || model<IUser>('User', userSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;AAAA;;AAQA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C,GACA;IACE,YAAY;AACd;AAGF,MAAM,OAAO,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAS,QAAQ;uCAElC","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/app/api/auth/signup/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport connectToDatabase from '../../../../lib/db';\nimport User from '../../../../models/user';\n\nexport async function POST(req: NextRequest) {\n  console.log('‚úÖ POST /api/auth/signup triggered');\n  try {\n    const body = await req.json();\n    console.log('üì¶ Received:', body);\n\n    const { name, email, password } = body;\n\n   const conn = await connectToDatabase();\n    console.log('Connected to DB:', conn.connection.name);\n\n    console.log('üîå MongoDB connected');\n\n    const existing = await User.findOne({ email });\n    if (existing) {\n      console.log('‚ö†Ô∏è User already exists');\n      return NextResponse.json({ error: 'User already exists' }, { status: 400 });\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 10);\n    const user = await User.create({ name, email, password: hashedPassword });\n    console.log('‚úÖ User created:', user._id);\n\n    return NextResponse.json({ message: 'User created', userId: user._id }, { status: 201 });\n  } catch (error) {\n    console.error('‚ùå Error in signup:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAEnC,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAiB,AAAD;QAClC,QAAQ,GAAG,CAAC,oBAAoB,KAAK,UAAU,CAAC,IAAI;QAEpD,QAAQ,GAAG,CAAC;QAEZ,MAAM,WAAW,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAC5C,IAAI,UAAU;YACZ,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QACnD,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAAE;YAAM;YAAO,UAAU;QAAe;QACvE,QAAQ,GAAG,CAAC,mBAAmB,KAAK,GAAG;QAEvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAgB,QAAQ,KAAK,GAAG;QAAC,GAAG;YAAE,QAAQ;QAAI;IACxF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}