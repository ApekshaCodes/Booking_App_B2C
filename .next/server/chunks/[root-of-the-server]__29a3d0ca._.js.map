{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable');\n}\n\nlet cached = (global as any).mongoose || { conn: null, promise: null };\n\nasync function connectToDatabase() {\n  if (cached.conn) return cached.conn;\n  if (!cached.promise) {\n    cached.promise = mongoose.connect(MONGODB_URI).then(mongoose => mongoose);\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default connectToDatabase;\n"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,AAAC,OAAe,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAErE,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IACnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,SAAS,OAAO,CAAC,aAAa,IAAI,CAAC,CAAA,YAAY;IAClE;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/models/user.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst userSchema = new mongoose.Schema({\n  name: String,\n  email: { type: String, unique: true },\n  password: String\n}, { timestamps: true });\n\nexport default mongoose.models.User || mongoose.model(\"User\", userSchema);\n"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,aAAa,IAAI,SAAS,MAAM,CAAC;IACrC,MAAM;IACN,OAAO;QAAE,MAAM;QAAQ,QAAQ;IAAK;IACpC,UAAU;AACZ,GAAG;IAAE,YAAY;AAAK;uCAEP,SAAS,MAAM,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/apekshapathak/Desktop/Booking_App_B2C/src/app/api/auth/signup/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport connectToDatabase from '../../../../lib/db';\nimport User from '../../../../models/user';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { name, email, password } = body;\n\n    await connectToDatabase();\n\n    const existing = await User.findOne({ email });\n    if (existing) {\n      return NextResponse.json({ error: 'User already exists' }, { status: 400 });\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 10);\n    const user = await User.create({ name, email, password: hashedPassword });\n\n    return NextResponse.json({ message: 'User created', userId: user._id }, { status: 201 });\n  } catch (error) {\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAElC,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAiB,AAAD;QAEtB,MAAM,WAAW,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAC5C,IAAI,UAAU;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QACnD,MAAM,OAAO,MAAM,uHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAAE;YAAM;YAAO,UAAU;QAAe;QAEvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAgB,QAAQ,KAAK,GAAG;QAAC,GAAG;YAAE,QAAQ;QAAI;IACxF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}